#!/bin/bash
#PBS -l walltime={WALLTIMESTRING}
#PBS -l mem={MEMORYSTRING}
#PBS -l ncpus={CPUSTRING}
#PBS -l software=vasp
#PBS -l wd
#PBS -q normal
#PBS -lstorage=scratch/v43+gdata/v43

cd "$PBS_O_WORKDIR"

mv KPOINTS KPOINTS_final

{VASPMODULELOADSTRING}

source /g/data/v43/Han/mambaforge/bin/activate pyiron

run_cmd="mpirun"

echo 'import sys

from custodian.custodian import Custodian
from custodian.vasp.handlers import VaspErrorHandler, UnconvergedErrorHandler, NonConvergingErrorHandler, PositiveEnergyErrorHandler
from custodian.vasp.jobs import VaspJob

output_filename = "vasp.log"
handlers = [VaspErrorHandler(output_filename=output_filename), UnconvergedErrorHandler(), NonConvergingErrorHandler(), PositiveEnergyErrorHandler()]
jobs = [VaspJob(sys.argv[1:],
                output_file=output_filename,
                suffix = ".relax_1",
                final=False,
                settings_override=[{"dict": "INCAR", "action": {"_set": {"KSPACING": 0.9}}}],
                copy_magmom=True),
        VaspJob(sys.argv[1:],
                output_file=output_filename,
                suffix = ".relax_2",
                final=False,
                settings_override = [{"file": "CONTCAR", "action": {"_file_copy": {"dest": "POSCAR"}}},
                    {"file": "KPOINTS_final", "action":{"_file_copy": {"dest": "KPOINTS"}}},
                    {"dict": "INCAR", "action": {"_set": {"EDIFF": 1E-5}}}],
                    #{"dict": "INCAR", "action": {"_set": {"KSPACING": 0.5, "EDIFF": 1E-5}}}],
                copy_magmom=True),
        VaspJob(sys.argv[1:],
                output_file=output_filename,
                suffix = "",
                settings_override = [{"dict": "INCAR", "action": {"_set": {"NSW": 0, "LAECHG": True, "LCHARGE": True, "NELM": 240, "EDIFF": 1E-5}}},
                                     {"file": "CONTCAR", "action": {"_file_copy": {"dest": "POSCAR"}}}])]
c = Custodian(handlers, jobs, max_errors=10)
c.run()' > DoubleRelaxation-DDEC6-custodian.py

python DoubleRelaxation-DDEC6-custodian.py $run_cmd vasp_std &> vasp.log

echo '<net charge>
0.0 <-- specifies the net charge of the unit cell (defaults to 0.0 if nothing specified)
</net charge>
<periodicity along A, B, and C vectors>
.true. <--- specifies whether the first direction is periodic
.true. <--- specifies whether the second direction is periodic
.true. <--- specifies whether the third direction is periodic
</periodicity along A, B, and C vectors>
<atomic densities directory complete path>
/home/562/hlm562/chargemol_09_26_2017/atomic_densities/
</atomic densities directory complete path>
<charge type>
DDEC6 <-- specifies the charge type (DDEC3 or DDEC6)
</charge type>
<compute BOs>
.true. <-- specifies whether to compute bond orders or not
</compute BOs>' > job_control.txt

OMP_NUM_THREADS={CPUSTRING}
export OMP_NUM_THREADS
export PATH=$PATH:/home/562/hlm562/chargemol_09_26_2017/atomic_densities/
export PATH=$PATH:/home/562/hlm562/chargemol_09_26_2017/chargemol_FORTRAN_09_26_2017/compiled_binaries/linux
Chargemol_09_26_2017_linux_parallel

# Cleanup the data so it doesn't flood the drive
rm CHG* CHGCAR* PROCAR* WAVECAR* EIGENVAL* REPORT* IBZKPT* REPORT* DOSCAR.* XDATCAR*

directory_name=$(basename "$PWD")
tar -czvf "${directory_name}.tar.gz" --exclude="AECCAR*" .
find . ! -name "${directory_name}.tar.gz" ! -name 'OUTCAR' ! -name 'CONTCAR' ! -name 'vasprun.xml' ! -name 'starter*' ! -name 'AECCAR*' -type f -exec rm -f {} +
